<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration>
	<!--引用默认日志配置-->
	<include resource="org/springframework/boot/logging/logback/defaults.xml"/>
	<!--使用默认的控制台日志输出实现-->
	<include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
	<!--应用名称-->
	<springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="th-sth"/>

	<springProperty scope="context" name="host" source="spring.rabbitmq.host"/>
	<springProperty scope="context" name="port" source="spring.rabbitmq.port"/>
	<springProperty scope="context" name="virtualHost" source="spring.rabbitmq.virtual-host"/>
	<springProperty scope="context" name="username" source="spring.rabbitmq.username"/>
	<springProperty scope="context" name="password" source="spring.rabbitmq.password"/>
	<springProperty scope="context" name="exchange" source="rivamed.log.exchange"/>
	<springProperty scope="context" name="routingKey" source="rivamed.log.routingKey"/>
	<springProperty scope="context" name="env" source="spring.profiles.active"/>

	<!--日志文件保存路径-->
	<property name="LOG_FILE_PATH" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs}"/>

	<!--DEBUG日志输出到文件-->
	<appender name="FILE_DEBUG"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--输出DEBUG以上级别日志-->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<encoder>
			<!--设置为默认的文件日志格式-->
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!--设置文件命名格式-->
			<fileNamePattern>logs/debug/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!--设置日志文件大小，超过就重新生成文件，默认10M-->
			<maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
			<!--日志文件保留天数，默认30天-->
			<maxHistory>${LOG_FILE_MAX_HISTORY:-90}</maxHistory>
		</rollingPolicy>
	</appender>

	<!--ERROR日志输出到文件-->
	<appender name="FILE_ERROR"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--只输出ERROR级别的日志-->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<!--设置为默认的文件日志格式-->
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!--设置文件命名格式-->
			<fileNamePattern>logs/error/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!--设置日志文件大小，超过就重新生成文件，默认10M-->
			<maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
			<!--日志文件保留天数，默认30天-->
			<maxHistory>${LOG_FILE_MAX_HISTORY:-90}</maxHistory>
		</rollingPolicy>
	</appender>

	<!-- 异步输出 -->
	<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>256</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILE_DEBUG"/>
	</appender>

	<appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>256</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILE_ERROR"/>
	</appender>

	<!-- 自定义日志写入方式和格式 -->
	<!--<appender name="esLog" class="cn.rivamed.framework.log.builder.LogAppender">
		<subSysName>${APP_NAME}</subSysName>&lt;!&ndash; 系统名称 &ndash;&gt;
	</appender>-->

	<appender name="RabbitMQAppender" class="cn.rivamed.log.logback.appender.RabbitMQAppender">
		<sysName>${APP_NAME}</sysName><!-- 系统名称 -->
		<env>${env}</env><!-- 配置文件环境 -->
		<host>${host}</host><!-- RabbitMQ 主机 -->
		<port>${port}</port><!-- RabbitMQ 端口 -->
		<virtualHost>${virtualHost}</virtualHost><!-- RabbitMQ 虚拟主机名 -->
		<username>${username}</username><!-- RabbitMQ账户 -->
		<password>${password}</password><!-- RabbitMQ密码 -->
		<exchange>${exchange}</exchange><!-- 交换机名称 -->
		<routingKey>${routingKey}</routingKey><!-- 路由键 -->
	</appender>

	<root level="INFO">
		<appender-ref ref="CONSOLE"/>
		<appender-ref ref="ASYNC-INFO"/>
		<appender-ref ref="ASYNC-ERROR"/>
		<appender-ref ref="RabbitMQAppender"/>
	</root>
</configuration>
